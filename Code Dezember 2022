
/*
Spendenschädel Code 2022
von Rosalie Muchow
*/

//Bibliotheken einbinden
#include "Arduino.h" 
#include "SoftwareSerial.h"
#include "DFRobotDFPlayerMini.h"
#include <VarSpeedServo.h>

//DFPlayer konfigurieren
SoftwareSerial dfplayerserial(10, 11);
DFRobotDFPlayerMini mydfplayer;

VarSpeedServo auge1servo;  // create servo object to control a servo
// a maximum of eight servo objects can be created
VarSpeedServo auge2servo;
VarSpeedServo mundservo;

//Servos konfigurieren
const int servoPin1 = 6;  // Pin für Auge 1
const int servoPin2 = 7;  // Pin für Auge 2
const int servoPin3 = 5;  // Pin für Mund

//Pins für die Augen konfigurieren
const int Auge1 = 12;
const int Auge2 = 13;

//Variabeln für Sensorwerte definieren
int sensorValue0 = analogRead(A0);
int sensorValue1 = analogRead(A1);
unsigned long currentMillis = millis();

//Variabeln für Zeitmanagement konfigurieren
unsigned long previousMillis = 0;
unsigned long lastplay = 0;
long interval = 1000;
long audiointerval = 9000;

//Setup
void setup() {
  //LEDs als Ausgänge definieren
  pinMode(Auge1, OUTPUT);
  pinMode(Auge2, OUTPUT);
  //Kommunikation für Debugging starten
  Serial.begin(9600);
  dfplayerserial.begin(9600);

//Fehlermeldung ausgeben, wenn DFPlayer nicht eingerichtet werden kann
  if (!mydfplayer.begin(dfplayerserial)) {
    Serial.println(F("Unable to begin dfplayer!"));
    for (int a = 0; a != 100; a = a + 1) {
      digitalWrite(Auge1, HIGH);
      digitalWrite(Auge2, LOW);
      delay(100);
      digitalWrite(Auge1, LOW);
      digitalWrite(Auge2, HIGH);
      delay(100);
    }
  }
  Serial.println(F("dfplayer online"));

  mydfplayer.setTimeOut(500);

  mydfplayer.volume(30);  // 1-30

  mydfplayer.EQ(DFPLAYER_EQ_NORMAL);

  mydfplayer.outputDevice(DFPLAYER_DEVICE_SD);

//Startsound ausgeben
  //mydfplayer.play(random(1, 21));
mydfplayer.playFolder(1, 1);

  delay(5000);

//LEDs und Motoren starten
  auge1servo.attach(servoPin1);      // attaches the servo on pin 9 to the servo object
  auge1servo.write(90, 255, false);  // set the intial position of the servo, as fast as possible, run in background
  auge2servo.attach(servoPin2);      // attaches the servo on pin 9 to the servo object
  auge2servo.write(90, 255, true);   // set the intial position of the servo, as fast as possible, wait until done

  digitalWrite(Auge1, HIGH);
  digitalWrite(Auge2, HIGH);


  mundservo.attach(servoPin3);
}

void loop() {

//Fehlermeldung anzeigen, wenn die Schädeldecke fehlt
//ein nichtangeschlossener Fotosensor führt zu einer dauerhaften Beantspruchung des Dankessatzes
  while (analogRead(A0) == 0) {
    digitalWrite(Auge1, HIGH);
    digitalWrite(Auge2, HIGH);
    delay(500);
    digitalWrite(Auge1, LOW);
    digitalWrite(Auge2, LOW);
    delay(500);
  }





  //Say random Spruch
  if (random(100, 1700) == 500) {
    auge1servo.detach();
    auge2servo.detach();
    Serial.println("trigger random");

    int myRandom = random(2, 3);
    //myRandom = 1;
    Serial.print("Play Random ");
    Serial.println(myRandom);

    mydfplayer.playFolder(1, myRandom); //die Audiodateien werden in zufälliger Reihenfolge abgespielt


    auge1servo.attach(servoPin1);
    auge2servo.attach(servoPin2);

    for (int a = 0; a != 20; a = a + 1) {
      Serial.println("forSchleife");
      mundservo.write(120, random(10, 95));
      delay(random(100, 200));
      mundservo.write(180, random(10, 55));
      delay(random(100, 200));
    }
    mundservo.write(100, random(10, 25));
    delay(1000);
  }







//Aktualisiere Daten
  Serial.println("loop");
  sensorValue0 = analogRead(A0);
  sensorValue1 = analogRead(A1);
  currentMillis = millis();

//Bewege die Augen zu einer neuen Position
  if (currentMillis - previousMillis >= interval) {
    Serial.println("NewMov");
    // save the last time you blinked the LED


    int eye = random(80, 100);
    int eyeSpeed = random(1, 10);

    auge1servo.write(eye, eyeSpeed);  // move the servo to 180, fast speed, run background
    auge2servo.write(eye, eyeSpeed);  // move the servo to 180, fast speed, wait until done
    mundservo.write(random(100, 120), random(10, 30));


    previousMillis = currentMillis;
  }

//Dankessatz sagen
  if (sensorValue0 < 800 || sensorValue1 < 800) {
    Serial.print("Trigger");
    digitalWrite(Auge1, LOW);
    digitalWrite(Auge2, LOW);

//Motoren abkoppeln, da die Kommuikation mit dem DFPlayer für die Servos zu lange dauert. Sonst ruckeln sie.
    auge1servo.detach();
    auge2servo.detach();

    mydfplayer.playFolder(1, 1);

    auge1servo.attach(servoPin1);
    auge2servo.attach(servoPin2);
 
    int eye = 90;
    int eyeSpeed = 200;

    auge1servo.write(eye, eyeSpeed);
    auge2servo.write(eye, eyeSpeed);

    delay(500);
    digitalWrite(Auge1, HIGH);
    digitalWrite(Auge2, HIGH);

//Mundbewegung synchronisiert zur Audio
    mundservo.write(180, random(70, 155));
    delay(100);
    mundservo.write(100, random(10, 95));
    delay(200);
    mundservo.write(180, random(10, 55));
    delay(100);
    mundservo.write(100, random(10, 95));
    delay(200);
    mundservo.write(180, random(10, 55));
    delay(100);
    mundservo.write(100, random(10, 95));
    delay(200);
    mundservo.write(180, random(10, 55));
    delay(100);
    mundservo.write(100, random(10, 95));
    delay(200);
    mundservo.write(180, random(10, 55));
    delay(100);
    mundservo.write(100, random(10, 95));
    delay(200);
    mundservo.write(180, random(10, 55));
    delay(100);
    mundservo.write(100, random(10, 95));
    delay(500);
    mundservo.write(180, random(50, 95));
    delay(100);
    mundservo.write(100, random(10, 95));
    delay(200);
    mundservo.write(180, random(10, 55));
    delay(100);
    mundservo.write(100, random(10, 95));
    delay(200);
    mundservo.write(180, random(10, 55));
    delay(100);
    mundservo.write(120, random(10, 95));
    delay(200);
    mundservo.write(180, random(10, 55));
    delay(300);
    mundservo.write(120, random(10, 55));
    delay(200);
  }
  delay(3);
}
  
  
